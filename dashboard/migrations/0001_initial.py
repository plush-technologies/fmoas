# Generated by Django 4.2.2 on 2023-06-28 00:55

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('stall', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FacilityStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FacilityStatus', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facilityType', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buildingName', models.CharField(max_length=100)),
                ('buildingNumber', models.IntegerField()),
                ('level', models.IntegerField()),
                ('room', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PriorityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateTimeRecorded', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SkillType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skillType', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fName', models.CharField(max_length=50)),
                ('lName', models.CharField(max_length=50)),
                ('department', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StaffLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staffLevel', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateAssigned', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('textDescription', models.TextField()),
                ('staffComment', models.TextField()),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.facility')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.prioritytype')),
                ('staffMember', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.staff')),
            ],
        ),
        migrations.AddField(
            model_name='staff',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.stafflevel'),
        ),
        migrations.AddField(
            model_name='staff',
            name='skillType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.skilltype'),
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.sensor')),
            ],
        ),
        migrations.AddField(
            model_name='sensor',
            name='sensorType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.sensortype'),
        ),
        migrations.AddField(
            model_name='facility',
            name='facilityType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.facilitytype'),
        ),
        migrations.AddField(
            model_name='facility',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.sensor'),
        ),
        migrations.AddField(
            model_name='facility',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.facilitystatus'),
        ),
        migrations.CreateModel(
            name='CompleteTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCompleted', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.task')),
            ],
        ),
    ]
